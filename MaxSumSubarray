public class MaxSumSubarray {
    public static int maxSum(int[] arr, int k) {
        int n = arr.length;
        if (n < k) return -1;

        int maxSum = 0;
        int windowSum = 0;

        
        for (int i = 0; i < k; i++) {
            windowSum += arr[i];
        }

        maxSum = windowSum;

       
        for (int i = k; i < n; i++) {
            windowSum += arr[i] - arr[i - k]; 
            maxSum = Math.max(maxSum, windowSum);
        }

        return maxSum;
    }

    public static void main(String[] args) {
        int[] arr = {100, 200, 300, 400};
        int k = 2;
        System.out.println("Maximum sum of subarray of size " + k + ": " + maxSum(arr, k));
    }
}

// Time & Space Complexity


// Time	= O(N)
// Space =	O(1)
