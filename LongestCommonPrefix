import java.sql.Time;

public class LongestCommonPrefix {
    public static String longestCommonPrefix(String[] strs) {
        if (strs == null || strs.length == 0) return "";

        // Traverse characters of first string
        for (int i = 0; i < strs[0].length(); i++) {
            char currentChar = strs[0].charAt(i);

            // Compare with all other strings
            for (int j = 1; j < strs.length; j++) {
                // If i is out of bounds or mismatch found
                if (i >= strs[j].length() || strs[j].charAt(i) != currentChar) {
                    return strs[0].substring(0, i);
                }
            }
        }

        return strs[0];  
    }

    public static void main(String[] args) {
        String[] input = {"flower", "flow", "flight"};
        String result = longestCommonPrefix(input);
        System.out.println("Longest Common Prefix: \"" + result + "\"");
    }
    
}

// Time and Space Complexity:
// Time=O(N*M)
// Space=O(1)

// Algorithm (Vertical Scanning):
// Take the first string as a reference.

// Compare character-by-character with each string.

// Stop when:

// You reach the end of any string.

// Mismatch is found.

// Return the prefix formed until that point.

